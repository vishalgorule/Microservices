<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <modules>
        <module>twitter-to-kafka-service</module>
		<module>app-config-data</module>
        <module>kafka</module>
		<module>kafka/kafka-model</module>
		<module>kafka/kafka-admin</module>
		<module>kafka/kafka-producer</module>
		<module>kafka/kafka-consumer</module>
		<module>common-config</module>
        <module>config-server</module>
        <module>kafka-to-elastic-service</module>
        <module>elastic</module>
		<module>elastic/elastic-config</module>
		<module>elastic/elastic-model</module>
		<module>elastic/elastic-index-client</module>
		<module>elastic/elastic-query-client</module>
		<module>common-utils</module>
		<module>elastic-query-service</module>
		<module>elastic-query-web-client</module>
		<module>elastic-query-service-common</module>
		<module>elastic-query-web-client-common</module>
		<module>reactive-elastic-query-service</module>
        <module>reactive-elastic-query-web-client</module>
        <module>elastic-query-web-client-2</module>
		<module>kafka-streams-service</module>
		<module>analytics-service</module>
        <module>discovery-service</module>
		<module>gateway-service</module>
		<module>mdc-interceptor</module>
	</modules>
    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.microservices.demo</groupId>
	<artifactId>microservices-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservices-demo</name>
	<description>Microservices Demo project for Spring Boot</description>
	<packaging>pom</packaging>

	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.5.4</spring-boot.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<twitter4j-version>4.0.7</twitter4j-version>
		<lombok-version>1.18.20</lombok-version>
		<avro-version>1.10.2</avro-version>
		<spring-kafka-version>2.7.7</spring-kafka-version>
		<spring-retry>1.3.1</spring-retry>
		<spring-web-flux>2.5.4</spring-web-flux>
		<spring-avro-serializer>6.2.0</spring-avro-serializer>
		<spring-cloud-config>3.0.4</spring-cloud-config>
		<spring-cloud-dependencies.version>2020.0.3</spring-cloud-dependencies.version>
		<jasypt-spring.version>3.0.4</jasypt-spring.version>
		<elastic-search.version>2.5.4</elastic-search.version>
		<elastic-search-server.version>7.13.4</elastic-search-server.version>
		<springdoc-openapi.version>1.5.10</springdoc-openapi.version>
		<thymeleaf-springsecurity.version>3.0.4.RELEASE</thymeleaf-springsecurity.version>
		<spring-load-balancer.version>3.0.3</spring-load-balancer.version>
		<postgresql.version>42.2.23</postgresql.version>
		<kafka-streams.version>3.0.0</kafka-streams.version>
		<kafka-streams-avro-serde.version>6.2.0</kafka-streams-avro-serde.version>
		<circutebreaker-resilience4j>2.0.2</circutebreaker-resilience4j>
		<micrometer-prometheus.version>1.7.4</micrometer-prometheus.version>
		<logstash-logback.version>6.6</logstash-logback.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>app-config-data</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>common-config</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-admin</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-producer</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-consumer</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-config</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-index-client</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>common-utils</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-client</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-service-common</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-web-client-common</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>mdc-interceptor</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>${twitter4j-version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok-version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.retry</groupId>
				<artifactId>spring-retry</artifactId>
				<version>${spring-retry}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-web-flux}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-bootstrap</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>${jasypt-spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
				<version>${elastic-search.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elastic-search-server.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elastic-search-server.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc-openapi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.thymeleaf.extras</groupId>
				<artifactId>thymeleaf-extras-springsecurity5</artifactId>
				<version>${thymeleaf-springsecurity.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-loadbalancer</artifactId>
				<version>${spring-load-balancer.version}</version>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>


			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-streams-avro-serde</artifactId>
				<version>${kafka-streams-avro-serde.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-streams</artifactId>
				<version>${kafka-streams.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-streams.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-gateway</artifactId>
				<version>${spring-cloud-config}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
				<version>${circutebreaker-resilience4j}</version>
			</dependency>

			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer-prometheus.version}</version>
			</dependency>

			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback.version}</version>
			</dependency>

			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${spring-avro-serializer}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

		</dependencies>
	</dependencyManagement>



	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>
